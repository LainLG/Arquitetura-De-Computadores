// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
        
        // se ingresa el valor de selecion nx el cual esta definido por if (nx == 1) set x = !x 

        Mux16( a = x , sel = zx , out = xmux);
        Not16( in = xmux , out = xnegada);

        // se ingresa el valor de selecion zx el cual esta definido por if (zx == 1) set x = 0 
        
        Mux16( a = xmux , b = xnegada , sel = nx , out = xzero);
        
        // se ingresa el valor de selecion nx el cual esta definido por if (ny == 1) set x = !x 

        Mux16( a = y , sel = zy , out = ymux);
        Not16( in = ymux , out = ynegada);

        // se ingresa el valor de selecion zx el cual esta definido por if (zy == 1) set x = 0 
        
        Mux16( a = ymux , b = ynegada , sel = ny , out = yzero);

        // se ingresa el valor de selecion f el cual esta definido if (f == 1)  set out = x + y
        // if (f == 0)  set out = x & y  
        
        Add16( a = xzero , b = yzero , out = suma);
        And16(a = xzero , b = yzero , out = opAnd);
        Mux16( a = opAnd , b = suma , sel = f , out = fresultado);

        // se ingresa el valor de selecion no el cual esta definido como if (no == 1) set out = !out

        Not16( in = fresultado , out = notfresultado);
        Mux16(a=fresultado, b=notfresultado, sel=no, out=out, out[15]=firstOut, out[0..7]=finalLeft, out[8..15]=finalRight);

        // si el output es zr esta definido por  if (out == 0), 0 otherwise


        Or8Way( in = finalLeft ,  out = salidasizquierda);
        Or8Way( in = finalRight , out = salidasderecha);
        Or( a = salidasizquierda, b = salidasderecha, out = salidastotales);
        Not( in = salidastotales , out = zr);

        // si la salida es menor a cero se realiza

        And( a = firstOut, b = true, out = ng);


}